apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android-extensions'


def keystorePropertiesFile = rootProject.file("keystore/project.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion androidCompileSdk
    buildToolsVersion androidToolsVersion

    defaultConfig {
        applicationId "com.udacity.asteroidradar"
        minSdkVersion androidMinSdk
        targetSdkVersion androidTargetSdk
        versionCode codeVersion
        versionName nameVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //Common config fields
        buildConfigField "String", "NASA_API_KEY", "\"" + keystoreProperties['nasa_api_key'] + "\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    // Kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Android
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_extensions_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_extensions_version"

    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"

    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigation_version"

    //Moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_converter_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_converter_version"

//    Coroutines - Deprecated - No more required
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
//    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$kotlinx_coroutines_adapter_version"

    // Picasso
    implementation "com.squareup.picasso:picasso:$picasso_version"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //WorkManager
    implementation "android.arch.work:work-runtime-ktx:$work_manager_version"

    //Logger
    implementation "com.jakewharton.timber:timber:$timber_version"

    //Testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_core_version"
}
